{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udfae BulletBuzz - Auto-Battler Game","text":""},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":"<p>Play BulletBuzz directly above! </p> <p>For faster testing, you can also play at: https://tjsingleton.github.io/bulletbuzz/</p> <p>\ud83c\udfae Development Mode: Add <code>?speed=10</code> to the URL for 10x game speed!</p>"},{"location":"#what-is-bulletbuzz","title":"\ud83c\udfaf What is BulletBuzz?","text":"<p>BulletBuzz is an auto-battler game where you watch your character fight automatically using sophisticated AI. The game features:</p> <ul> <li>\ud83e\udde0 Advanced AI: Intelligent auto-pathing with wall avoidance and smart targeting</li> <li>\u2694\ufe0f Auto-Battler: Watch your character fight automatically with sophisticated combat mechanics</li> <li>\ud83c\udfa8 Modern UI: Professional shop modals and detailed game over screens</li> <li>\ud83e\uddea Testing: Comprehensive unit tests and automated screenshot testing</li> </ul>"},{"location":"#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":""},{"location":"#technology-stack","title":"Technology Stack","text":"<ul> <li>TypeScript: Type-safe game development</li> <li>HTML5 Canvas: Game rendering</li> <li>ES Modules: Modern JavaScript modules</li> <li>Node.js: Headless testing environment</li> <li>Jest: Unit testing framework</li> <li>Playwright: Automated browser testing and screenshots</li> </ul>"},{"location":"#core-systems","title":"Core Systems","text":"<ul> <li>Game Loop: Fixed timestep implementation for consistent updates</li> <li>AI System: Auto-pathing with wall avoidance and target tracking</li> <li>Combat System: Automatic axe throwing and collision detection</li> <li>Pickup System: XP and heart collection with attraction mechanics</li> <li>Level System: XP progression and shop management</li> <li>Spawn System: Dynamic enemy and pickup generation</li> </ul>"},{"location":"#game-features","title":"\ud83c\udfae Game Features","text":""},{"location":"#advanced-ai","title":"\ud83e\udde0 Advanced AI","text":"<ul> <li>Auto-Pathing: Intelligent movement with wall avoidance and target tracking</li> <li>Combat AI: Smart targeting within attack range with automatic axe throwing</li> <li>Pickup Attraction: XP orbs and hearts attract to player within pickup range</li> <li>Robot Vacuum Mode: Efficient pickup collection with pathfinding to drops</li> </ul>"},{"location":"#gameplay-mechanics","title":"\u2694\ufe0f Gameplay Mechanics","text":"<ul> <li>Auto-Battler: Watch your character fight automatically</li> <li>XP System: Level up to unlock new abilities with accurate progress tracking</li> <li>Pickup System: Collect hearts and XP drops with attraction mechanics</li> <li>Shop System: Choose upgrades between levels with auto-shop option</li> <li>Difficulty Scaling: Progressive challenge increase with dynamic spawn rates</li> </ul>"},{"location":"#enhanced-ui","title":"\ud83c\udfa8 Enhanced UI","text":"<ul> <li>Professional Shop Modal: Button-like options with sequential numbering</li> <li>Detailed Game Over Screen: Comprehensive statistics with skull emoji</li> <li>Real-time Stats: Live player and enemy statistics</li> <li>Range Visualization: Attack and pickup range circles</li> <li>XP Progress Bar: Visual progress tracking</li> </ul>"},{"location":"#game-balance","title":"\ud83d\udcca Game Balance","text":""},{"location":"#current-settings","title":"Current Settings","text":"<ul> <li>Player: 10 HP, 0.85 speed, 25 pickup range, 150 attack range</li> <li>Enemies: 0.15 speed, 8s spawn interval</li> <li>Auto-Pathing: 120 avoidance distance, 2.0 strength</li> <li>Difficulty: Single enemy until level 6, 15% scaling</li> <li>Shop: Appears after every level with 3 random options</li> </ul> <p>Made with \u2764\ufe0f by @tjsingleton </p>"},{"location":"api/ai-api/","title":"AI API","text":""},{"location":"api/ai-api/#auto-pathing-system","title":"Auto-Pathing System","text":"<p>The AI system handles intelligent movement and pathfinding for the player character.</p>"},{"location":"api/ai-api/#features","title":"Features","text":"<ul> <li>Wall Avoidance: Automatically avoids obstacles and boundaries</li> <li>Target Tracking: Moves towards enemies and pickups</li> <li>Efficient Pathfinding: Optimized movement algorithms</li> <li>Dynamic Behavior: Adapts to changing game conditions</li> </ul>"},{"location":"api/ai-api/#configuration","title":"Configuration","text":"<pre><code>interface AIConfig {\n  avoidanceDistance: number;\n  attractionStrength: number;\n  maxSpeed: number;\n}\n</code></pre>"},{"location":"api/ai-api/#enemy-ai","title":"Enemy AI","text":"<p>Enemies use simplified AI for movement and behavior patterns.</p>"},{"location":"api/ai-api/#behavior-patterns","title":"Behavior Patterns","text":"<ul> <li>Chase Mode: Enemies move towards the player</li> <li>Wander Mode: Random movement when no target</li> <li>Aggressive Mode: Increased speed and damage </li> </ul>"},{"location":"api/configuration-api/","title":"Configuration API","text":""},{"location":"api/game-api/","title":"Game API","text":""},{"location":"api/game-api/#bulletbuzzgame-class","title":"BulletBuzzGame Class","text":"<p>The main game class that handles the entire game loop and state management.</p>"},{"location":"api/game-api/#constructor","title":"Constructor","text":"<pre><code>new BulletBuzzGame(canvas: HTMLCanvasElement, options?: GameOptions)\n</code></pre>"},{"location":"api/game-api/#methods","title":"Methods","text":""},{"location":"api/game-api/#start","title":"<code>start()</code>","text":"<p>Starts the game loop and begins gameplay.</p>"},{"location":"api/game-api/#pause","title":"<code>pause()</code>","text":"<p>Pauses the game loop.</p>"},{"location":"api/game-api/#resume","title":"<code>resume()</code>","text":"<p>Resumes the game loop.</p>"},{"location":"api/game-api/#reset","title":"<code>reset()</code>","text":"<p>Resets the game to initial state.</p>"},{"location":"api/game-api/#updatedeltatime-number","title":"<code>update(deltaTime: number)</code>","text":"<p>Updates game state for the given time delta.</p>"},{"location":"api/game-api/#properties","title":"Properties","text":"<ul> <li><code>player</code>: The player character instance</li> <li><code>enemies</code>: Array of active enemies</li> <li><code>pickups</code>: Array of active pickups</li> <li><code>level</code>: Current game level</li> <li><code>score</code>: Current score</li> <li><code>gameState</code>: Current game state (playing, paused, gameOver)</li> </ul>"},{"location":"api/game-api/#game-options","title":"Game Options","text":"<pre><code>interface GameOptions {\n  gameSpeed?: number;\n  autoPath?: boolean;\n  autoShop?: boolean;\n}\n</code></pre>"},{"location":"api/game-api/#events","title":"Events","text":"<p>The game emits various events that can be listened to:</p> <ul> <li><code>levelUp</code>: Fired when player levels up</li> <li><code>gameOver</code>: Fired when game ends</li> <li><code>enemySpawned</code>: Fired when new enemy spawns</li> <li><code>pickupCollected</code>: Fired when pickup is collected </li> </ul>"},{"location":"api/screenshot-api/","title":"Screenshot API","text":""},{"location":"api/testing-api/","title":"Testing API","text":""},{"location":"testing/headless-simulation/","title":"Headless Simulation","text":""},{"location":"testing/integration-testing/","title":"Integration Testing","text":""},{"location":"testing/performance-testing/","title":"Performance Testing","text":""},{"location":"testing/screenshot-testing/","title":"Screenshot Testing","text":""},{"location":"testing/unit-testing/","title":"Unit Testing","text":"<p>BulletBuzz includes comprehensive unit tests covering all major game systems.</p>"},{"location":"testing/unit-testing/#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\nnpm test\n\n# Run tests in watch mode\nnpm run test:watch\n\n# Run tests with coverage\nnpm run test:coverage\n</code></pre>"},{"location":"testing/unit-testing/#test-structure","title":"Test Structure","text":"<p>Tests are organized by system:</p> <ul> <li><code>BulletBuzzGame.test.ts</code>: Main game class tests</li> <li><code>core/Player.test.ts</code>: Player character tests</li> <li><code>core/Enemy.test.ts</code>: Enemy AI tests</li> <li><code>core/Axe.test.ts</code>: Combat system tests</li> <li><code>systems/CollisionSystem.test.ts</code>: Collision detection tests</li> <li><code>systems/LevelSystem.test.ts</code>: Level progression tests</li> <li><code>systems/SpawnSystem.test.ts</code>: Enemy spawning tests</li> </ul>"},{"location":"testing/unit-testing/#test-coverage","title":"Test Coverage","text":"<p>The test suite covers:</p> <ul> <li>\u2705 Game initialization and state management</li> <li>\u2705 Player movement and controls</li> <li>\u2705 Enemy AI and pathfinding</li> <li>\u2705 Combat mechanics and collision detection</li> <li>\u2705 Pickup collection and attraction</li> <li>\u2705 Level progression and shop system</li> <li>\u2705 Performance monitoring</li> <li>\u2705 Memory management</li> </ul>"},{"location":"testing/unit-testing/#example-test","title":"Example Test","text":"<pre><code>describe('Player', () =&gt; {\n  it('should move towards target position', () =&gt; {\n    const player = new Player(100, 100);\n    player.moveTowards(200, 200);\n\n    expect(player.x).toBeGreaterThan(100);\n    expect(player.y).toBeGreaterThan(100);\n  });\n});\n</code></pre>"}]}