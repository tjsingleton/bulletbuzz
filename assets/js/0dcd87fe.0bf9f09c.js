"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[774],{2636:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"testing/screenshot-testing","title":"Screenshot Testing","description":"Documentation for automated visual testing with Playwright.","source":"@site/docs/testing/screenshot-testing.md","sourceDirName":"testing","slug":"/testing/screenshot-testing","permalink":"/bulletbuzz/docs/testing/screenshot-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/tjsingleton/bulletbuzz/edit/main/docs/docs/testing/screenshot-testing.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Headless Simulation","permalink":"/bulletbuzz/docs/testing/headless-simulation"},"next":{"title":"Performance Testing","permalink":"/bulletbuzz/docs/testing/performance-testing"}}');var r=s(4848),i=s(8453);const o={sidebar_position:3},a="Screenshot Testing",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Available Commands",id:"available-commands",level:2},{value:"Features",id:"features",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Screenshot Test",id:"basic-screenshot-test",level:3},{value:"Advanced Screenshot Class",id:"advanced-screenshot-class",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Screenshot Settings",id:"screenshot-settings",level:3},{value:"Browser Configuration",id:"browser-configuration",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Screenshot Organization",id:"screenshot-organization",level:3},{value:"Testing Workflow",id:"testing-workflow",level:3},{value:"Integration",id:"integration",level:2},{value:"GitHub Actions",id:"github-actions",level:3},{value:"Development Workflow",id:"development-workflow",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"screenshot-testing",children:"Screenshot Testing"})}),"\n",(0,r.jsx)(n.p,{children:"Documentation for automated visual testing with Playwright."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Screenshot testing provides automated visual regression testing using Playwright for cross-browser compatibility."}),"\n",(0,r.jsx)(n.h2,{id:"available-commands",children:"Available Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Basic screenshot test\nnpm run screenshots\n\n# Advanced screenshot testing\nnpm run screenshots:advanced\n\n# UI element screenshots\nnpm run screenshots:ui\n\n# Speed test screenshots\nnpm run screenshots:speed\n\n# Game state screenshots\nnpm run screenshots:game-states\n\n# Game over screenshots\nnpm run screenshots:game-over\n\n# All screenshot tests\nnpm run screenshots:all\n\n# Clean up screenshots\nnpm run screenshots:clean\n"})}),"\n",(0,r.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-Browser"}),": Works with Chromium, Firefox, and WebKit"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Temporary Storage"}),": Screenshots stored in ",(0,r.jsx)(n.code,{children:".tmp/screenshots/"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic Cleanup"}),": Old screenshots removed before new tests"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Live-Server Ignored"}),": Screenshots don't trigger development reloads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git Ignored"}),": Temporary files not tracked in version control"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timestamped Files"}),": Organized screenshots with timestamps"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full Page Capture"}),": Complete game interface screenshots"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-screenshot-test",children:"Basic Screenshot Test"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { takeGameScreenshots } = require('./screenshot-test.js');\n\n// Take screenshots of game states\nawait takeGameScreenshots();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-screenshot-class",children:"Advanced Screenshot Class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const GameScreenshotTaker = require('./advanced-screenshots.js');\n\nconst taker = new GameScreenshotTaker();\nawait taker.captureGameStates();\nawait taker.captureUIElements();\nawait taker.close();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"screenshot-settings",children:"Screenshot Settings"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Screenshot options\nconst options = {\n  fullPage: true,\n  path: 'screenshot.png',\n  viewport: { width: 1200, height: 800 }\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"browser-configuration",children:"Browser Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const browser = await chromium.launch({ \n  headless: false,\n  slowMo: 100\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"screenshot-organization",children:"Screenshot Organization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Descriptive Names"}),": Use clear, descriptive filenames"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Timestamped"}),": Include timestamps for organization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Categorized"}),": Group related screenshots together"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cleanup"}),": Regular cleanup of old screenshots"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing-workflow",children:"Testing Workflow"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Development"}),": Take screenshots during development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regression"}),": Compare screenshots for visual regressions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Use screenshots in documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CI/CD"}),": Integrate with continuous integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,r.jsx)(n.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- name: Take Screenshots\n  run: npm run screenshots:all\n"})}),"\n",(0,r.jsx)(n.h3,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# During development\nnpm run screenshots:ui\n\n# Before commit\nnpm run screenshots:all\n\n# Clean up\nnpm run screenshots:clean\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);