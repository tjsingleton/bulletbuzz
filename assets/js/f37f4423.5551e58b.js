"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7388],{2311:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"category/api-reference","title":"API Reference","description":"The BulletBuzz API provides a comprehensive interface for game development, testing, and integration.","source":"@site/docs/category/api-reference.md","sourceDirName":"category","slug":"/category/api-reference","permalink":"/bulletbuzz/docs/category/api-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/tjsingleton/bulletbuzz/edit/main/docs/docs/category/api-reference.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/bulletbuzz/docs/intro"},"next":{"title":"Game API","permalink":"/bulletbuzz/docs/api/game-api"}}');var s=t(4848),r=t(8453);const l={sidebar_position:1},a="API Reference",o={},c=[{value:"API Overview",id:"api-overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"API Categories",id:"api-categories",level:2},{value:"Game API",id:"game-api",level:3},{value:"AI API",id:"ai-api",level:3},{value:"Testing API",id:"testing-api",level:3},{value:"Screenshot API",id:"screenshot-api",level:3},{value:"Configuration API",id:"configuration-api",level:3},{value:"Development",id:"development",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(n.p,{children:"The BulletBuzz API provides a comprehensive interface for game development, testing, and integration."}),"\n",(0,s.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The BulletBuzz API is built around the ",(0,s.jsx)(n.code,{children:"BulletBuzzGame"})," class, which serves as the main facade for all game functionality. The API is designed to be:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type-safe"}),": Full TypeScript support with comprehensive type definitions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modular"}),": Clean separation between game systems"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testable"}),": Easy to unit test and mock"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensible"}),": Designed for easy extension and customization"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The API is organized into several key areas:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Game API"}),": Core game functionality and state management"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AI API"}),": Auto-pathing and AI behavior controls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing API"}),": Headless testing and simulation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Screenshot API"}),": Automated visual testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration API"}),": Game balance and settings"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { BulletBuzzGame } from './src/BulletBuzzGame';\n\n// Create a new game instance\nconst game = new BulletBuzzGame({\n  playerHp: 10,\n  playerSpeed: 0.85,\n  enemySpeed: 0.15,\n  spawnInterval: 8.0\n});\n\n// Step the game forward\ngame.step(1/60);\n\n// Get current game state\nconst state = game.getGameState();\nconsole.log(`Level: ${state.level}, Enemies Killed: ${state.enemiesKilled}`);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api-categories",children:"API Categories"}),"\n",(0,s.jsx)(n.h3,{id:"game-api",children:"Game API"}),"\n",(0,s.jsx)(n.p,{children:"Core game functionality including state management, game loop, and basic controls."}),"\n",(0,s.jsx)(n.h3,{id:"ai-api",children:"AI API"}),"\n",(0,s.jsx)(n.p,{children:"Auto-pathing controls, AI behavior configuration, and movement systems."}),"\n",(0,s.jsx)(n.h3,{id:"testing-api",children:"Testing API"}),"\n",(0,s.jsx)(n.p,{children:"Headless simulation, unit testing utilities, and performance monitoring."}),"\n",(0,s.jsx)(n.h3,{id:"screenshot-api",children:"Screenshot API"}),"\n",(0,s.jsx)(n.p,{children:"Automated visual testing with Playwright integration."}),"\n",(0,s.jsx)(n.h3,{id:"configuration-api",children:"Configuration API"}),"\n",(0,s.jsx)(n.p,{children:"Game balance settings, difficulty scaling, and parameter adjustment."}),"\n",(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsx)(n.p,{children:"The API is built with TypeScript and follows modern JavaScript patterns:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"ES Modules"}),": All imports/exports use ES module syntax"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type Safety"}),": Comprehensive TypeScript definitions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": JSDoc comments for all public methods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing"}),": Full unit test coverage for all API methods"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"Explore the API documentation by category:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Game API"})," - Start here for basic game functionality"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AI API"})," - Learn about auto-pathing and AI controls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testing API"})," - Understand testing and simulation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Screenshot API"})," - Automated visual testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Configuration API"})," - Game balance and settings"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);