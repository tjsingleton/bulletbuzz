"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5194],{3817:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"api/configuration-api","title":"Configuration API","description":"Documentation for game configuration and balance settings.","source":"@site/docs/api/configuration-api.md","sourceDirName":"api","slug":"/api/configuration-api","permalink":"/bulletbuzz/docs/api/configuration-api","draft":false,"unlisted":false,"editUrl":"https://github.com/tjsingleton/bulletbuzz/edit/main/docs/docs/api/configuration-api.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Screenshot API","permalink":"/bulletbuzz/docs/api/screenshot-api"},"next":{"title":"Testing","permalink":"/bulletbuzz/docs/category/testing"}}');var r=i(4848),t=i(8453);const s={sidebar_position:5},l="Configuration API",c={},o=[{value:"Overview",id:"overview",level:2},{value:"Game Configuration",id:"game-configuration",level:2},{value:"GameConfig Interface",id:"gameconfig-interface",level:3},{value:"Default Configuration",id:"default-configuration",level:2},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Easy Mode",id:"easy-mode",level:3},{value:"Hard Mode",id:"hard-mode",level:3},{value:"Speed Testing",id:"speed-testing",level:3},{value:"Balance Parameters",id:"balance-parameters",level:2},{value:"Player Settings",id:"player-settings",level:3},{value:"Enemy Settings",id:"enemy-settings",level:3},{value:"AI Settings",id:"ai-settings",level:3},{value:"Difficulty Settings",id:"difficulty-settings",level:3},{value:"URL Parameters",id:"url-parameters",level:2},{value:"Game Speed",id:"game-speed",level:3},{value:"Development Mode",id:"development-mode",level:3},{value:"Performance Configuration",id:"performance-configuration",level:2},{value:"Memory Limits",id:"memory-limits",level:3},{value:"Frame Rate Settings",id:"frame-rate-settings",level:3},{value:"Configuration Validation",id:"configuration-validation",level:2},{value:"Validation Rules",id:"validation-rules",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Configuration Management",id:"configuration-management",level:3},{value:"Balance Tuning",id:"balance-tuning",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"configuration-api",children:"Configuration API"})}),"\n",(0,r.jsx)(n.p,{children:"Documentation for game configuration and balance settings."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Configuration API provides control over game balance, difficulty, and performance settings."}),"\n",(0,r.jsx)(n.h2,{id:"game-configuration",children:"Game Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"gameconfig-interface",children:"GameConfig Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface GameConfig {\n  // Player settings\n  playerHp?: number;\n  playerSpeed?: number;\n  pickupRange?: number;\n  attackRange?: number;\n  \n  // Enemy settings\n  enemySpeed?: number;\n  spawnInterval?: number;\n  minSpawnInterval?: number;\n  \n  // Auto-pathing settings\n  avoidanceDistance?: number;\n  avoidanceStrength?: number;\n  \n  // Difficulty settings\n  difficultyScaling?: number;\n  maxEnemies?: number;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const defaultConfig = {\n  // Player settings\n  playerHp: 10,\n  playerSpeed: 0.85,\n  pickupRange: 25,\n  attackRange: 150,\n  \n  // Enemy settings\n  enemySpeed: 0.15,\n  spawnInterval: 8.0,\n  minSpawnInterval: 2.0,\n  \n  // Auto-pathing settings\n  avoidanceDistance: 120,\n  avoidanceStrength: 2.0,\n  \n  // Difficulty settings\n  difficultyScaling: 0.15,\n  maxEnemies: 50\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,r.jsx)(n.h3,{id:"easy-mode",children:"Easy Mode"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const easyConfig = {\n  playerHp: 15,\n  playerSpeed: 1.0,\n  enemySpeed: 0.1,\n  spawnInterval: 10.0,\n  difficultyScaling: 0.1\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"hard-mode",children:"Hard Mode"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const hardConfig = {\n  playerHp: 5,\n  playerSpeed: 0.7,\n  enemySpeed: 0.25,\n  spawnInterval: 5.0,\n  difficultyScaling: 0.25\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"speed-testing",children:"Speed Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const speedTestConfig = {\n  spawnInterval: 1.0,\n  minSpawnInterval: 0.5,\n  difficultyScaling: 0.5\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"balance-parameters",children:"Balance Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"player-settings",children:"Player Settings"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"playerHp"}),": Starting health points"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"playerSpeed"}),": Movement speed multiplier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pickupRange"}),": Range for collecting pickups"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"attackRange"}),": Range for attacking enemies"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enemy-settings",children:"Enemy Settings"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"enemySpeed"}),": Movement speed of enemies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spawnInterval"}),": Time between enemy spawns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"minSpawnInterval"}),": Minimum spawn interval"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ai-settings",children:"AI Settings"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"avoidanceDistance"}),": Distance to avoid walls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"avoidanceStrength"}),": Strength of wall avoidance"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"difficulty-settings",children:"Difficulty Settings"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"difficultyScaling"}),": How quickly difficulty increases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"maxEnemies"}),": Maximum number of enemies"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"url-parameters",children:"URL Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"game-speed",children:"Game Speed"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Set game speed via URL\nconst urlParams = new URLSearchParams(window.location.search);\nconst speed = urlParams.get('speed') || 1.0;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"development-mode",children:"Development Mode"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Enable development features\nconst devMode = urlParams.get('dev') === 'true';\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance-configuration",children:"Performance Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"memory-limits",children:"Memory Limits"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const performanceConfig = {\n  maxObjects: 1000,\n  maxArrays: 100,\n  memoryWarningThreshold: 0.9\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"frame-rate-settings",children:"Frame Rate Settings"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const frameRateConfig = {\n  targetFPS: 60,\n  minFPS: 30,\n  maxFPS: 120\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-validation",children:"Configuration Validation"}),"\n",(0,r.jsx)(n.h3,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function validateConfig(config: GameConfig): boolean {\n  // Validate player settings\n  if (config.playerHp && config.playerHp <= 0) return false;\n  if (config.playerSpeed && config.playerSpeed <= 0) return false;\n  \n  // Validate enemy settings\n  if (config.enemySpeed && config.enemySpeed <= 0) return false;\n  if (config.spawnInterval && config.spawnInterval <= 0) return false;\n  \n  return true;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"try {\n  const game = new BulletBuzzGame(config);\n} catch (error) {\n  console.error('Invalid configuration:', error);\n  // Use default configuration\n  const game = new BulletBuzzGame();\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Always validate configuration values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Defaults"}),": Provide sensible default values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation"}),": Document all configuration options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Test different configurations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"balance-tuning",children:"Balance Tuning"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Incremental Changes"}),": Make small, incremental changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing"}),": Test changes thoroughly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Metrics"}),": Track performance metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Feedback"}),": Gather user feedback"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory Monitoring"}),": Monitor memory usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Frame Rate"}),": Maintain consistent frame rate"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Load Testing"}),": Test with maximum load"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),": Optimize based on metrics"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var a=i(6540);const r={},t=a.createContext(r);function s(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);