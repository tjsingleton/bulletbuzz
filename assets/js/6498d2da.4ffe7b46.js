"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3713],{2659:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api/game-api","title":"Game API","description":"The core game API provides functionality for game state management, game loop control, and basic game operations.","source":"@site/docs/api/game-api.md","sourceDirName":"api","slug":"/api/game-api","permalink":"/bulletbuzz/docs/api/game-api","draft":false,"unlisted":false,"editUrl":"https://github.com/tjsingleton/bulletbuzz/edit/main/docs/docs/api/game-api.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"API Reference","permalink":"/bulletbuzz/docs/category/api-reference"},"next":{"title":"AI API","permalink":"/bulletbuzz/docs/api/ai-api"}}');var r=s(4848),i=s(8453);const a={sidebar_position:1},l="Game API",o={},c=[{value:"BulletBuzzGame Class",id:"bulletbuzzgame-class",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Game State Management",id:"game-state-management",level:2},{value:"getGameState()",id:"getgamestate",level:3},{value:"getMemory()",id:"getmemory",level:3},{value:"Game Control",id:"game-control",level:2},{value:"step(deltaTime)",id:"stepdeltatime",level:3},{value:"reset()",id:"reset",level:3},{value:"Shop System",id:"shop-system",level:2},{value:"getShopOptions()",id:"getshopoptions",level:3},{value:"selectShopOption(index)",id:"selectshopoptionindex",level:3},{value:"isShopOpen()",id:"isshopopen",level:3},{value:"Testing Methods",id:"testing-methods",level:2},{value:"getEnemiesSpawned()",id:"getenemiesspawned",level:3},{value:"getEnemiesKilled()",id:"getenemieskilled",level:3},{value:"getXpCollected()",id:"getxpcollected",level:3},{value:"getLevel()",id:"getlevel",level:3},{value:"Game State Interface",id:"game-state-interface",level:2},{value:"Memory Usage Interface",id:"memory-usage-interface",level:2},{value:"Shop Option Interface",id:"shop-option-interface",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Game Loop",id:"basic-game-loop",level:3},{value:"Shop Interaction",id:"shop-interaction",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"game-api",children:"Game API"})}),"\n",(0,r.jsx)(n.p,{children:"The core game API provides functionality for game state management, game loop control, and basic game operations."}),"\n",(0,r.jsx)(n.h2,{id:"bulletbuzzgame-class",children:"BulletBuzzGame Class"}),"\n",(0,r.jsx)(n.p,{children:"The main game API facade that wraps the internal game systems."}),"\n",(0,r.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"new BulletBuzzGame(config?: GameConfig)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config"})," (optional): Game configuration object"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { BulletBuzzGame } from './src/BulletBuzzGame';\n\nconst game = new BulletBuzzGame({\n  playerHp: 10,\n  playerSpeed: 0.85,\n  enemySpeed: 0.15,\n  spawnInterval: 8.0\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"game-state-management",children:"Game State Management"}),"\n",(0,r.jsx)(n.h3,{id:"getgamestate",children:"getGameState()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the current game state."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getGameState(): GameState\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"GameState"})," object containing current game information"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const state = game.getGameState();\nconsole.log(`Level: ${state.level}`);\nconsole.log(`Enemies Killed: ${state.enemiesKilled}`);\nconsole.log(`XP Collected: ${state.xpCollected}`);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getmemory",children:"getMemory()"}),"\n",(0,r.jsx)(n.p,{children:"Returns memory usage information."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getMemory(): MemoryUsage\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"MemoryUsage"})," object with memory statistics"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const memory = game.getMemory();\nconsole.log(`Memory Usage: ${memory.usage}%`);\nconsole.log(`Objects: ${memory.objects}`);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"game-control",children:"Game Control"}),"\n",(0,r.jsx)(n.h3,{id:"stepdeltatime",children:"step(deltaTime)"}),"\n",(0,r.jsx)(n.p,{children:"Advances the game by the specified time delta."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"step(deltaTime: number): void\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deltaTime"}),": Time in seconds to advance the game"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Step game forward by 1/60th of a second (60 FPS)\ngame.step(1/60);\n\n// Step game forward by 1 second\ngame.step(1.0);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"reset",children:"reset()"}),"\n",(0,r.jsx)(n.p,{children:"Resets the game to initial state."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"reset(): void\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"game.reset();\nconsole.log('Game has been reset');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"shop-system",children:"Shop System"}),"\n",(0,r.jsx)(n.h3,{id:"getshopoptions",children:"getShopOptions()"}),"\n",(0,r.jsx)(n.p,{children:"Returns available shop options for the current level."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getShopOptions(): ShopOption[]\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," Array of shop options"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const options = game.getShopOptions();\noptions.forEach((option, index) => {\n  console.log(`${index + 1}. ${option.name}: ${option.description}`);\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"selectshopoptionindex",children:"selectShopOption(index)"}),"\n",(0,r.jsx)(n.p,{children:"Selects a shop option by index."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"selectShopOption(index: number): void\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"index"}),": Zero-based index of the shop option to select"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Select the first shop option\ngame.selectShopOption(0);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"isshopopen",children:"isShopOpen()"}),"\n",(0,r.jsx)(n.p,{children:"Checks if the shop is currently open."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"isShopOpen(): boolean\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," ",(0,r.jsx)(n.code,{children:"true"})," if shop is open, ",(0,r.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"if (game.isShopOpen()) {\n  console.log('Shop is open - make a selection');\n} else {\n  console.log('Shop is closed');\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-methods",children:"Testing Methods"}),"\n",(0,r.jsx)(n.h3,{id:"getenemiesspawned",children:"getEnemiesSpawned()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the total number of enemies spawned."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getEnemiesSpawned(): number\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getenemieskilled",children:"getEnemiesKilled()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the total number of enemies killed."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getEnemiesKilled(): number\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getxpcollected",children:"getXpCollected()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the total XP collected."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getXpCollected(): number\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getlevel",children:"getLevel()"}),"\n",(0,r.jsx)(n.p,{children:"Returns the current player level."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"getLevel(): number\n"})}),"\n",(0,r.jsx)(n.h2,{id:"game-state-interface",children:"Game State Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface GameState {\n  // Player information\n  playerHp: number;\n  playerMaxHp: number;\n  playerX: number;\n  playerY: number;\n  playerSpeed: number;\n  pickupRange: number;\n  attackRange: number;\n  \n  // Game progress\n  level: number;\n  xp: number;\n  xpToNextLevel: number;\n  enemiesKilled: number;\n  enemiesSpawned: number;\n  xpCollected: number;\n  heartsCollected: number;\n  \n  // Game state\n  gameTime: number;\n  paused: boolean;\n  gameOver: boolean;\n  showShop: boolean;\n  \n  // Performance\n  frameRate: number;\n  memoryUsage: number;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"memory-usage-interface",children:"Memory Usage Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface MemoryUsage {\n  usage: number;      // Memory usage percentage\n  objects: number;    // Number of game objects\n  arrays: number;     // Number of arrays\n  warnings: string[]; // Memory warnings\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"shop-option-interface",children:"Shop Option Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ShopOption {\n  name: string;        // Option name\n  description: string; // Option description\n  cost: number;        // XP cost\n  effect: string;      // Effect description\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"The Game API includes comprehensive error handling:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"try {\n  game.step(1/60);\n} catch (error) {\n  console.error('Game step failed:', error);\n}\n\n// Check for memory warnings\nconst memory = game.getMemory();\nif (memory.warnings.length > 0) {\n  console.warn('Memory warnings:', memory.warnings);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fixed Timestep"}),": The game uses a fixed timestep for consistent updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory Management"}),": Automatic cleanup of temporary objects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Object Pooling"}),": Efficient memory usage for frequently created objects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Array Limits"}),": Prevents unbounded growth of game object arrays"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-game-loop",children:"Basic Game Loop"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const game = new BulletBuzzGame();\nconst targetFPS = 60;\nconst frameTime = 1 / targetFPS;\n\nfunction gameLoop() {\n  game.step(frameTime);\n  \n  const state = game.getGameState();\n  if (state.gameOver) {\n    console.log('Game Over!');\n    return;\n  }\n  \n  requestAnimationFrame(gameLoop);\n}\n\ngameLoop();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"shop-interaction",children:"Shop Interaction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Check if shop is open\nif (game.isShopOpen()) {\n  const options = game.getShopOptions();\n  \n  // Display options\n  options.forEach((option, index) => {\n    console.log(`${index + 1}. ${option.name}: ${option.description}`);\n  });\n  \n  // Select first option\n  game.selectShopOption(0);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Monitor game performance\nsetInterval(() => {\n  const state = game.getGameState();\n  const memory = game.getMemory();\n  \n  console.log(`FPS: ${state.frameRate}`);\n  console.log(`Memory: ${memory.usage}%`);\n  console.log(`Objects: ${memory.objects}`);\n}, 1000);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);